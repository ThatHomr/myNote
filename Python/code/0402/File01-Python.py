# 용어 정리  
#  주석(Comments)
#   - 코드 내에 설명을 작성하기 위한 기능
#   - 프로그램 실행에 전혀 영향이 없다.

#  키워드(Keyword)
#   - Python 언어에서 사용되는 기능이 있거나 의미가 있는 단어

#  식별자(Identifier)
#   - 데이터, 함수, 클래스 등을 식별하기 위한 문자
#   - 개발자에 의해 정해진다.

#  표현식(Expression)
#   - 데이터를 표현하는 식 = 문법
#   - 숫자 → 100, 문자 → 'A', 100 + 200

#  명령어(Command)
#   - 하나 이상의 표현식으로 구성된 문장
#   - 프로그램이 수행하는 단위

#  함수(Function)
#   - 하나 이상의 명령어들로 구성된 블록
#   - 하나의 기능을 담당
#   - function_name( )

# 'Hello World!' 라는 문구를 출력하라! 
print('Hello World!')
# print() : 출력하기 위한 기능을 의미하는 함수
# 'Hello World!' : 출력될 데이터(문구)
#-----------------------------------------------
# 변수(Variable)
#   = 변할 수 있는 수
#   - 데이터를 저장하기 위한 저장 공간 
#   - 각 변수에는 식별하기 위한 식별자를 작성

# 나이를 출력
print(40)
# 10년 뒤의 나이를 출력
print(40 + 10)

# - 데이터의 용도/목적을 알 수 없다.
# - 중복된 데이터를 한 번에 관리 할 수 없다.
# - 코드 상에 작성되었기 때문에
#   항상 같은 결과를 준다.

# 위의 문제를 해결하기 위한 것이 '변수'이다.

# 변수 사용 방법 
#  1. 저장(사용)할 데이터의 용도/목적에 맞는
#     식별자를 작성
#  2. 변수에 데이터를 저장하기 위한 연산자
#     대입 연산자(=)를 이용하여 저장(대입)
#  3. 데이터를 사용할 때는 변수의 식별자를 작성
age = 40
print(age)
age_after_year = age + 10
print(age_after_year)
# 변수의 장점 
# - 변수의 식별자를 통해 연산되는
#   데이터의 의미를 알 수 있다.
# - 한 곳에 저장된 데이터를 다루기 때문에
#   동일한 데이터를 다루게 된다.
# - 변수에는 입력/연산된 값도 저장할 수 있다.

# 변수는 '변할 수 있는 수'이기 때문에
# 얼마든지 데이터가 다른 데이터로 변할 수 있다.
# 그리고 이미 수행된 명령어에는 영향을 미치지않는다.
age = 20
print(age)
print(age_after_year)
# → 이미 연산된 값이 저장되기 때문에
#   기존에 저장된 값이 출력된다.
# → 바뀐 변수에 값에 맞는 값을 출력하려면
#   다시 연산해야한다.
age_after_year = age + 10
print(age_after_year)
#--------------------------------------------------
# 보통 하나의 변수에는 하나의 데이터가 저장된다.
# 다수의 변수에 다수의 데이터를 한 번에 저장할 수 도 있다.
num1 = 50
num2 = 60
# 변수를 쉼표(,)를 구분으로 나열
# 데이터를 쉼표(,)를 구분으로 나열
# 이때 변수의 수와 데이터의 수가 일치
num1, num2 = 50, 60

#===============================================
# 자료형(Data Type)
#  - 데이터의 공통된 특징과 용도에 따라 
#    분류하여 정의한 것
#  - 기본적인 자료형
#      : 숫자(정수, 실수), 문자열, 논리

# 정수(Integer)
#  - 소수점이 없는 수 = 음수, 양수, 0
#  - 숫자 그대로를 작성
#  - 2진수(binary), 8진수(octal), 16진수(hexa)를 표현
print(218) # 정수 218
print(0b11011010) # 2진수
print(0o332)      # 8진수
print(0xDA)       # 16진수

# 실수(Floating-point)
#  - 소수점이 있는 수
#  - 숫자 그대로를 작성
#  - 실수, 지수, 복수소 표현이 가능
print(11.5) # 실수
print(1.5e-3) # 지수 
print(1.5 + 2.5j) # 복소수, i 대신 j 를 사용

# 논리(Boolean)
#  - 참과 거짓을 표현하는 타입
#  - 참 = True, 거짓 = False
print(True)
print(False)
# 나이가 20살 이상이다.
age = 29
print(age >= 20)

# 문자열(String)
#  - 문자 또는 문자들의 집합을 의미
#  - 따옴표를 통해서 데이터를 표현
#  - single line, multiple line
#  - escape charator
#     = 문자열에서 표현이 되어지지 않는 문자들을
#       표현하기 위한 문자들을 의미
#     = \(back slash)로 시작
#         - \n : 개행 문자(엔터)
#         - \t : 탭 문자
#         - \' : 작은 따옴표
#         - \" : 큰 따옴표
#         - \\ : '\' 문자
hello = 'Hello World'
print(hello) # single line

hello = '''Hello World
Hello Python'''
print(hello) # multiple line

my_name = 'My name is \'홍길도\''
print(my_name)







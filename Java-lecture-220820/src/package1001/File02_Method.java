package package1001;

class Simple02 {
	
	// 메서드(Method, member function)
	//  - 객체가 수행할 기능(행동)을 정의
	//  - 같은 클래스에 있는 멤버에 접근 할 수 있다.
	//  - 클래스 내부에 정의되고, 
	//    하나의 기능을 표현하기 위해 다수의 명령어로서 정의되며,
	//    이때 중괄호를 통해 하나의 블록으로 감싼다.
	
	//  - 입력 값을 받아서 메서드 내부에서 처리하여 결과를 반환
	
	// 메서드와 관련된 용어
	//  메서드 정의
	//		- 객체가 가징 기능을 만들기 위한 과정
	//		- 메서드에 필요한 반환 타입, 메서드 명, 매개 변수 등을 미리 정한다.
	//  메서드 명(=식별자)
	//		- 객체가 가징 기능의 이름
	//  인자 값(Argument)
	//		- 메서드에 전달되는 입력 값
	//  매개 변수(Parameter)
	//		- 메서드에서 인자 값을 받기 위한 변수
	//  반환 값(Return Value)
	//  	- 메서드의 결과 값
	//		- return 키워드 다음에 지정된 값
	//  반환 타입(Return Type)
	//		- 메서드의 결과 값의 타입
	//		- 결과 값이 없는 메서드인 경우 'void' 타입을 작성
	//  메서드 호출(Method Call)
	//		- 정의된 메서드를 실행
	//		- 메서드의 식별자와 함께 인자 값을 전달
	//		- 인자 값이 필요 없는 메서드이면 빈 소괄호만 작성
	
	// 수학에서의 함수
	//  f(x) = x + 10
	//	 - 메서드 명 	: f
	//   - 매개 변수 	: x
	//   - 반환 타입 	: int
	
	// 메서드 정의
	int f(int x) {
		// 연산/처리
		int result = x + 10;
		
		// 반환
		//  - 해당 메서드를 호출한 곳이로 되돌아간다.(return)
		//		= 메서드를 종료하기 위한 키워드
		//  - 되돌아갈 때 값이 지정되어있으면 값을 가지고 되돌아간다.
		return result;
	}
	
}


public class File02_Method {
	public static void main(String[] args) {
		Simple02 s1 = new Simple02();
		
		// 클래스에 정의된 메서드를 사용하는 것을 '호출(call)' 이라고 한다.
		//  - 메서드 호출 표현식 = 메서드명 + (~)
		//  - 메서드의 몸체에 있는 명령어를 수행
		//  - 프로그램이 실행하다가 메서드를 호출하면 프로그램의 흐름이
		//    호출된 메서드의 정의부로 이동한다.
		
		
		// 메서드 호출 	: s1.f1(~)
		// 인자 값		: 10
		// 반환 값		: 20
		int res1 = s1.f(10);
		// int res1 = 20;
		
		System.out.println("f(10) = " + res1);
		
		int res2 = s1.f(15);
		System.out.println("f(15) = " + res2);
	}
}
